import tkinter as tk
import sqlite3

conexion = sqlite3.connect("base_prueba.db")

conexion.execute("""create table if not exists contrasena(
                    id integer primary key AUTOINCREMENT,
                    contrasena varchar
                    )""")
conexion.execute("""create table if not exists usuario(
                    id integer primary key AUTOINCREMENT,
                    usuario varchar
                    )""")
conexion.close()
conexion = sqlite3.connect("base_prueba.db")

class MenuScreen(tk.Frame):
    
    def __init__(self, master):
        super().__init__(master)
        self.master = master
        self.master.configure(bg="red")
        self.master.title("mini calculadora predeterminada para suma, resta y multiplicacion de dos numeros")
        
        # Creamos el menú superior
        self.menu_bar = tk.Menu(self.master)
        self.master.config(menu=self.menu_bar)
        self.config(bg="red")
        
        # Creamos las opciones del menú
        self.file_menu = tk.Menu(self.menu_bar, tearoff=0)
        self.file_menu.add_command(label="Abrir archivo", command=self.open_file,background="orange")
        self.file_menu.add_command(label="Guardar archivo", command=self.save_file,background="orange")
        self.file_menu.add_separator(background="orange")
        self.file_menu.add_command(label="Salir", command=self.quit_program,background="orange")
        self.menu_bar.add_cascade(label="Archivo", menu=self.file_menu,background="orange")

        self.edit_menu = tk.Menu(self.menu_bar, tearoff=0)
        self.edit_menu.add_command(label="Copiar", command=self.copy,background="orange")
        self.edit_menu.add_command(label="Pegar", command=self.paste,background="orange")
        self.menu_bar.add_cascade(label="Editar", menu=self.edit_menu,background="orange")

        # Agregamos algunos widgets a la pantalla
        self.label = tk.Label(self, text="¡Buenos dias!",fg="orange" ,bg="red")
        self.label.pack(pady=10)
        self.button = tk.Button(self, text="Presioname", command=self.press_button,fg="red",bg="orange")
        self.button.pack(pady=20)
        self.pack()
        self.button2=tk.Button(self, text="prueba",command=self.press_button2,bg="orange",fg="red")
        self.button2.pack(pady=30)
        
    def open_file(self):
        print("Abrir archivo")

    def save_file(self):
        print("Guardar archivo")

    def quit_program(self):
        self.master.quit()

    def copy(self):
        print("Copiar")

    def paste(self):
        print("Pegar")

    def press_button(self):
        x=int(input("ingresa un numero:"))
        y=int(input("ingresa otro numero:"))
        print("la suma de los numero es ",(x+y),"\n\nla resta de los numeros es ",(x-y),"\n\nla multiplicacion de los numero es ",(x*y))
    

    def press_button2(self):
        
        def press_button2():
            self.master.configure(bg="red")
            self.config(bg="red")
            self.label.config(bg="red",fg="orange")
            self.button.config(bg="orange",fg="red")
            self.button2.config(bg="orange",fg="red")
            
        def press_button3():
            self.master.configure(bg="purple")
            self.config(bg="purple")
            self.label.config(bg="purple",fg="violet")
            self.button.config(bg="violet",fg="purple")
            self.button2.config(bg="violet",fg="purple")

        def press_button4():
            self.master.configure(bg="blue")
            self.config(bg="blue")
            self.label.config(bg="blue",fg="cyan")
            self.button.config(bg="cyan",fg="blue")
            self.button2.config(bg="cyan",fg="blue")
        
        def press_button5():
            self.master.configure(bg="green")
            self.config(bg="green")
            self.label.config(bg="green",fg="lime")
            self.button.config(bg="lime",fg="green")
            self.button2.config(bg="lime",fg="green")
        
        press_button2=tk.Button(self,text="defecto",command=press_button2,bg="orange",fg="red")
        press_button2.pack()
        press_button3=tk.Button(self, text="morado", command=press_button3, bg="violet", fg="purple")
        press_button3.pack()
        press_button4=tk.Button(self, text="Azul", command=press_button4, bg="cyan", fg="blue")
        press_button4.pack()
        press_button5=tk.Button(self,text="Verde",command=press_button5,bg="lime",fg="green")
        press_button5.pack()
        self.pack()

def registrarse():
    usuario=nombre_usuario.get()
    contrasena=contrasena_usuario.get()
    conexion.execute("Insert into usuario(usuario) values(?)",(usuario,))
    conexion.execute("Insert into contrasena(contrasena) values(?)",(contrasena,))
    resultado.config(text="el registro ha sido exitoso")

def iniciar_sesion():
    usuario = nombre_usuario.get()
    contrasena = contrasena_usuario.get()
    cursor = conexion.cursor()
    cursor.execute("SELECT usuario, contrasena FROM usuario JOIN contrasena ON usuario.id = contrasena.id WHERE usuario.usuario = ?", (usuario,))
    resultado_db = cursor.fetchone()
    if resultado_db and resultado_db[1] == contrasena:
        resultado.config(text="Inicio de sesión exitoso")
        
        root = tk.Tk()
        root.geometry("420x380")
        app = MenuScreen(root)
    else:
        resultado.config(text="Nombre de usuario o contraseña incorrectos")

ventana = tk.Tk()
ventana.config(bg="lime")
ventana.title("Inicio de sesión")
ventana.configure(padx=50)

nombre_usuario = tk.Entry(ventana)
nombre_usuario.config(bg="yellow")
nombre_usuario.pack(pady=10)
contrasena_usuario = tk.Entry(ventana, show="*")
contrasena_usuario.config(bg="yellow")
contrasena_usuario.pack()

iniciar_sesion = tk.Button(ventana, text="Iniciar sesión", command=iniciar_sesion, bg="yellow")
iniciar_sesion.pack(padx=10, pady=10)
registrarse=tk.Button(ventana,text="Registrarse",command=registrarse,bg="yellow")
registrarse.pack(padx=10,pady=11)

salir = tk.Button(ventana, text="Salir", command=ventana.quit)
salir.config(bg="yellow")
salir.pack()

resultado = tk.Label(ventana, text="")
resultado.config(bg="lime")
resultado.pack(pady=10)

ventana.mainloop()
